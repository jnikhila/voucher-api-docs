{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Voucher API documentation","text":"<p>Welcome to the comprehensive API documentation for the Voucher API. This powerful RESTful API enables businesses to create, manage, and apply sophisticated promotional offers and discount strategies.</p>"},{"location":"#features","title":"Features","text":"Flexible discounts <p>Build percentage discounts, fixed amounts, BOGO offers, tiered pricing, and complex conditional logic</p> Get Started Advanced analytics <p>Track performance, conversion rates, revenue impact, and customer behavior with detailed metrics</p> Analytics Guide Developer tools <p>RESTful API with comprehensive SDKs, webhooks, and robust error handling</p> API Reference Global support <p>Support for multiple currencies, geographic restrictions, and customer segments</p> Integration Patterns"},{"location":"#quick-start","title":"Quick start","text":"<p>Get started in minutes with a simple percentage discount:</p> cURLJavaScriptNode.js <pre><code>curl -X POST \"https://api.voucher.com/v1/vouchers\" \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"code\": \"WELCOME10\",\n    \"type\": \"percentage\",\n    \"discount_config\": {\n      \"percentage\": 10.0\n    },\n    \"conditions\": {\n      \"min_order_value\": 25.00\n    }\n  }'\n</code></pre> <pre><code>import { VouchersAPI } from '@voucher/vouchers-sdk';\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\nconst newVoucher = await vouchers.create({\n  code: 'WELCOME10',\n  type: 'percentage',\n  discount_config: {\n    percentage: 10.0\n  },\n  conditions: {\n    min_order_value: 25.00\n  }\n});\n</code></pre> <pre><code>const { VouchersAPI } = require('@voucher/vouchers-sdk');\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\nconst newVoucher = await vouchers.create({\n  code: 'WELCOME10',\n  type: 'percentage',\n  discount_config: {\n    percentage: 10.0\n  },\n  conditions: {\n    min_order_value: 25.00\n  }\n});\n</code></pre>"},{"location":"#supported-voucher-types","title":"Supported voucher types","text":"Type Description Example Use Case Percentage Apply percentage discounts 25% off summer collection Fixed Amount Apply fixed monetary discounts $10 off orders over $50 BOGO Buy-one-get-one offers Buy 2, get 1 free Tiered Volume-based pricing Bulk discount tiers Conditional Rule-based with complex logic Student discounts with verification"},{"location":"#enterprise-features","title":"Enterprise features","text":"<ul> <li>Geographic targeting - Country, region, and city-level restrictions</li> <li>Customer segmentation - Target specific customer groups</li> <li>Usage analytics - Comprehensive performance tracking</li> <li>Webhook integration - Real-time event notifications</li> <li>Rate limiting - Enterprise-grade API protection</li> <li>Multi-currency support - Global commerce ready</li> </ul>"},{"location":"#api-information","title":"API information","text":"<ul> <li>Base URL: <code>https://api.voucher.com/v1</code></li> <li>Authentication: Bearer Token</li> <li>Rate Limits: 1000 requests/hour</li> <li>Response Format: JSON</li> <li>API Version: v1.2.0</li> </ul> <p>Need help?</p> <ul> <li>Check out our Quick start guide</li> <li>Explore Code examples</li> <li>Join our Community forum</li> <li>Contact API support</li> </ul>"},{"location":"#latest-updates","title":"Latest updates","text":""},{"location":"#version-120","title":"Version 1.2.0","text":"<ul> <li>\u2728 Added tiered discount support</li> <li>\ud83d\udcca Enhanced analytics endpoints  </li> <li>\ud83d\udd27 Improved error messaging</li> <li>\ud83e\ude9d Added webhook support</li> </ul> <p>View full changelog</p> <p>Ready to get started? Follow our Quick start guide or dive into the API reference.</p>"},{"location":"api-reference/advanced-types/","title":"Advanced Types Reference","text":"<p>Learn about advanced voucher types and configurations.</p>"},{"location":"api-reference/advanced-types/#bogo-discounts","title":"BOGO Discounts","text":"<p>Buy One Get One (BOGO) discounts offer free or discounted items.</p> <pre><code>{\n  \"type\": \"bogo\",\n  \"config\": {\n    \"buy_quantity\": 1,\n    \"get_quantity\": 1,\n    \"get_discount\": 100,\n    \"get_discount_type\": \"percentage\",\n    \"applicable_items\": [\"item_1\", \"item_2\"]\n  }\n}\n</code></pre>"},{"location":"api-reference/advanced-types/#tiered-discounts","title":"Tiered Discounts","text":"<p>Tiered discounts apply different discount rates based on purchase value.</p> <pre><code>{\n  \"type\": \"tiered\",\n  \"config\": {\n    \"tiers\": [\n      {\n        \"min_value\": 100.00,\n        \"discount\": 10,\n        \"discount_type\": \"percentage\"\n      },\n      {\n        \"min_value\": 200.00,\n        \"discount\": 20,\n        \"discount_type\": \"percentage\"\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"api-reference/advanced-types/#conditional-discounts","title":"Conditional Discounts","text":"<p>Conditional discounts apply based on specific conditions.</p> <pre><code>{\n  \"type\": \"conditional\",\n  \"config\": {\n    \"conditions\": [\n      {\n        \"type\": \"customer_segment\",\n        \"value\": \"premium\"\n      },\n      {\n        \"type\": \"order_value\",\n        \"operator\": \"gte\",\n        \"value\": 100.00\n      }\n    ],\n    \"discount\": 15,\n    \"discount_type\": \"percentage\"\n  }\n}\n</code></pre>"},{"location":"api-reference/advanced-types/#stackable-discounts","title":"Stackable Discounts","text":"<p>Stackable discounts can be combined with other vouchers.</p> <pre><code>{\n  \"type\": \"stackable\",\n  \"config\": {\n    \"base_discount\": 10,\n    \"base_discount_type\": \"percentage\",\n    \"stack_rules\": {\n      \"max_stack_count\": 2,\n      \"max_total_discount\": 30\n    }\n  }\n}\n</code></pre>"},{"location":"api-reference/advanced-types/#best-practices","title":"Best Practices","text":"<ol> <li>Configuration</li> <li>Validate discount rules</li> <li>Test edge cases</li> <li> <p>Monitor performance</p> </li> <li> <p>Implementation</p> </li> <li>Handle conflicts</li> <li>Track usage</li> <li> <p>Log changes</p> </li> <li> <p>Testing</p> </li> <li>Test combinations</li> <li>Verify calculations</li> <li>Check limits</li> </ol>"},{"location":"api-reference/advanced-types/#next-steps","title":"Next Steps","text":"<ul> <li>Review voucher endpoints</li> <li>Check validation reference</li> <li>See analytics endpoints</li> </ul>"},{"location":"api-reference/analytics/","title":"Analytics Reference","text":"<p>Track and analyze voucher performance and usage patterns.</p>"},{"location":"api-reference/analytics/#analytics-endpoints","title":"Analytics Endpoints","text":""},{"location":"api-reference/analytics/#get-voucher-performance","title":"Get Voucher Performance","text":"<pre><code>GET /analytics/vouchers/{voucher_id}/performance\n</code></pre>"},{"location":"api-reference/analytics/#response","title":"Response","text":"<pre><code>{\n  \"voucher_id\": \"voucher_123\",\n  \"code\": \"WELCOME10\",\n  \"performance\": {\n    \"total_uses\": 150,\n    \"total_discount\": 1500.00,\n    \"conversion_rate\": 0.75,\n    \"avg_order_value\": 100.00,\n    \"revenue_impact\": 7500.00\n  },\n  \"time_period\": {\n    \"start\": \"2024-03-01T00:00:00Z\",\n    \"end\": \"2024-03-20T23:59:59Z\"\n  }\n}\n</code></pre>"},{"location":"api-reference/analytics/#get-usage-trends","title":"Get Usage Trends","text":"<pre><code>GET /analytics/vouchers/{voucher_id}/trends\n</code></pre>"},{"location":"api-reference/analytics/#query-parameters","title":"Query Parameters","text":"Parameter Type Description <code>interval</code> string Time interval (day, week, month) <code>start_date</code> string Start date (ISO format) <code>end_date</code> string End date (ISO format)"},{"location":"api-reference/analytics/#response_1","title":"Response","text":"<pre><code>{\n  \"voucher_id\": \"voucher_123\",\n  \"code\": \"WELCOME10\",\n  \"trends\": [\n    {\n      \"date\": \"2024-03-01\",\n      \"uses\": 10,\n      \"discount\": 100.00,\n      \"orders\": 15\n    },\n    {\n      \"date\": \"2024-03-02\",\n      \"uses\": 15,\n      \"discount\": 150.00,\n      \"orders\": 20\n    }\n  ]\n}\n</code></pre>"},{"location":"api-reference/analytics/#get-customer-insights","title":"Get Customer Insights","text":"<pre><code>GET /analytics/vouchers/{voucher_id}/customers\n</code></pre>"},{"location":"api-reference/analytics/#response_2","title":"Response","text":"<pre><code>{\n  \"voucher_id\": \"voucher_123\",\n  \"code\": \"WELCOME10\",\n  \"customer_insights\": {\n    \"total_customers\": 120,\n    \"new_customers\": 80,\n    \"returning_customers\": 40,\n    \"avg_customer_value\": 125.00,\n    \"top_customer_segments\": [\n      {\n        \"segment\": \"premium\",\n        \"count\": 45,\n        \"avg_order_value\": 150.00\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"api-reference/analytics/#export-analytics","title":"Export Analytics","text":""},{"location":"api-reference/analytics/#request-export","title":"Request Export","text":"<pre><code>POST /analytics/export\n</code></pre>"},{"location":"api-reference/analytics/#request-body","title":"Request Body","text":"<pre><code>{\n  \"voucher_ids\": [\"voucher_123\"],\n  \"metrics\": [\"uses\", \"discount\", \"orders\"],\n  \"format\": \"csv\",\n  \"time_period\": {\n    \"start\": \"2024-03-01T00:00:00Z\",\n    \"end\": \"2024-03-20T23:59:59Z\"\n  }\n}\n</code></pre>"},{"location":"api-reference/analytics/#response_3","title":"Response","text":"<pre><code>{\n  \"export_id\": \"export_123\",\n  \"status\": \"processing\",\n  \"estimated_completion\": \"2024-03-20T10:05:00Z\"\n}\n</code></pre>"},{"location":"api-reference/analytics/#get-export-status","title":"Get Export Status","text":"<pre><code>GET /analytics/export/{export_id}\n</code></pre>"},{"location":"api-reference/analytics/#response_4","title":"Response","text":"<pre><code>{\n  \"export_id\": \"export_123\",\n  \"status\": \"completed\",\n  \"download_url\": \"https://api.voucher.com/v1/analytics/export/export_123/download\",\n  \"expires_at\": \"2024-03-21T10:00:00Z\"\n}\n</code></pre>"},{"location":"api-reference/analytics/#error-responses","title":"Error Responses","text":""},{"location":"api-reference/analytics/#invalid-time-period","title":"Invalid Time Period","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"INVALID_TIME_PERIOD\",\n    \"message\": \"Time period exceeds maximum allowed range\",\n    \"details\": {\n      \"max_days\": 90\n    }\n  }\n}\n</code></pre>"},{"location":"api-reference/analytics/#export-failed","title":"Export Failed","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"EXPORT_FAILED\",\n    \"message\": \"Failed to generate export\",\n    \"details\": {\n      \"reason\": \"Too many records\"\n    }\n  }\n}\n</code></pre>"},{"location":"api-reference/analytics/#best-practices","title":"Best Practices","text":"<ol> <li>Data Collection</li> <li>Track all voucher interactions</li> <li>Monitor conversion rates</li> <li> <p>Analyze customer segments</p> </li> <li> <p>Performance Monitoring</p> </li> <li>Set up alerts for anomalies</li> <li>Track key metrics daily</li> <li> <p>Compare against benchmarks</p> </li> <li> <p>Export Management</p> </li> <li>Schedule regular exports</li> <li>Clean up old exports</li> <li>Use appropriate formats</li> </ol>"},{"location":"api-reference/analytics/#next-steps","title":"Next Steps","text":"<ul> <li>Review voucher endpoints</li> <li>Check validation reference</li> <li>See error handling</li> </ul>"},{"location":"api-reference/validation/","title":"Validation Reference","text":"<p>Learn about Voucher API validation process.</p>"},{"location":"api-reference/validation/#validation-process","title":"Validation Process","text":"<ol> <li>Basic Validation</li> <li>Check voucher existence</li> <li>Verify expiration</li> <li> <p>Validate usage limits</p> </li> <li> <p>Condition Validation</p> </li> <li>Check order value</li> <li>Verify item eligibility</li> <li> <p>Validate customer conditions</p> </li> <li> <p>Discount Calculation</p> </li> <li>Calculate discount amount</li> <li>Apply restrictions</li> <li>Handle special cases</li> </ol>"},{"location":"api-reference/validation/#validation-endpoint","title":"Validation Endpoint","text":"<pre><code>POST /v1/vouchers/validate\n</code></pre>"},{"location":"api-reference/validation/#request-body","title":"Request Body","text":"<pre><code>{\n  \"code\": \"SUMMER2024\",\n  \"order\": {\n    \"value\": 100.00,\n    \"currency\": \"USD\",\n    \"items\": [\n      {\n        \"id\": \"item_1\",\n        \"price\": 50.00,\n        \"quantity\": 2\n      }\n    ]\n  },\n  \"customer\": {\n    \"id\": \"customer_123\",\n    \"segment\": \"premium\"\n  }\n}\n</code></pre>"},{"location":"api-reference/validation/#response","title":"Response","text":"<pre><code>{\n  \"is_valid\": true,\n  \"discount_amount\": 20.00,\n  \"currency\": \"USD\",\n  \"applied_to\": [\n    {\n      \"item_id\": \"item_1\",\n      \"discount\": 10.00\n    }\n  ],\n  \"conditions_met\": [\n    \"min_order_value\",\n    \"customer_segment\"\n  ]\n}\n</code></pre>"},{"location":"api-reference/validation/#validation-rules","title":"Validation Rules","text":""},{"location":"api-reference/validation/#order-value","title":"Order Value","text":"<pre><code>{\n  \"type\": \"order_value\",\n  \"operator\": \"gte\",\n  \"value\": 50.00,\n  \"currency\": \"USD\"\n}\n</code></pre>"},{"location":"api-reference/validation/#items","title":"Items","text":"<pre><code>{\n  \"type\": \"items\",\n  \"rules\": [\n    {\n      \"item_id\": \"item_1\",\n      \"min_quantity\": 1\n    }\n  ]\n}\n</code></pre>"},{"location":"api-reference/validation/#customer","title":"Customer","text":"<pre><code>{\n  \"type\": \"customer\",\n  \"rules\": [\n    {\n      \"segment\": \"premium\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api-reference/validation/#error-responses","title":"Error Responses","text":""},{"location":"api-reference/validation/#invalid-voucher","title":"Invalid Voucher","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"VOUCHER_INVALID\",\n    \"message\": \"Voucher is not valid\",\n    \"details\": {\n      \"reason\": \"Order value below minimum\",\n      \"min_required\": 50.00,\n      \"current_value\": 30.00\n    }\n  }\n}\n</code></pre>"},{"location":"api-reference/validation/#expired-voucher","title":"Expired Voucher","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"VOUCHER_EXPIRED\",\n    \"message\": \"Voucher has expired\",\n    \"details\": {\n      \"expired_at\": \"2024-03-19T23:59:59Z\"\n    }\n  }\n}\n</code></pre>"},{"location":"api-reference/validation/#usage-limit-exceeded","title":"Usage Limit Exceeded","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"USAGE_LIMIT_EXCEEDED\",\n    \"message\": \"Voucher usage limit reached\",\n    \"details\": {\n      \"max_uses\": 100,\n      \"current_uses\": 100\n    }\n  }\n}\n</code></pre>"},{"location":"api-reference/validation/#best-practices","title":"Best Practices","text":"<ol> <li>Validation Timing</li> <li>Validate early</li> <li>Revalidate before apply</li> <li> <p>Cache results</p> </li> <li> <p>Error Handling</p> </li> <li>Handle all cases</li> <li>Show clear messages</li> <li> <p>Log failures</p> </li> <li> <p>Performance</p> </li> <li>Optimize checks</li> <li>Use caching</li> <li>Monitor response times</li> </ol>"},{"location":"api-reference/validation/#next-steps","title":"Next Steps","text":"<ul> <li>Review voucher endpoints</li> <li>Check analytics endpoints</li> <li>See advanced types</li> </ul>"},{"location":"api-reference/vouchers/","title":"Voucher API Reference","text":"<p>Learn about Voucher API endpoints and operations.</p>"},{"location":"api-reference/vouchers/#base-url","title":"Base URL","text":"<pre><code>https://api.voucher.com/v1\n</code></pre> <p>All API requests require authentication using an API key.</p>"},{"location":"api-reference/vouchers/#endpoints","title":"Endpoints","text":""},{"location":"api-reference/vouchers/#create-voucher","title":"Create Voucher","text":"<pre><code>POST /vouchers\n</code></pre>"},{"location":"api-reference/vouchers/#request-body","title":"Request Body","text":"<pre><code>{\n  \"code\": \"SUMMER2024\",\n  \"type\": \"percentage\",\n  \"value\": 20,\n  \"conditions\": {\n    \"min_order_value\": 50.00,\n    \"max_uses\": 1000\n  }\n}\n</code></pre>"},{"location":"api-reference/vouchers/#response","title":"Response","text":"<pre><code>{\n  \"id\": \"v_123\",\n  \"code\": \"SUMMER2024\",\n  \"type\": \"percentage\",\n  \"value\": 20,\n  \"conditions\": {\n    \"min_order_value\": 50.00,\n    \"max_uses\": 1000\n  },\n  \"created_at\": \"2024-03-20T10:00:00Z\"\n}\n</code></pre>"},{"location":"api-reference/vouchers/#validate-voucher","title":"Validate Voucher","text":"<pre><code>POST /vouchers/validate\n</code></pre>"},{"location":"api-reference/vouchers/#request-body_1","title":"Request Body","text":"<pre><code>{\n  \"code\": \"SUMMER2024\",\n  \"order\": {\n    \"value\": 100.00,\n    \"currency\": \"USD\"\n  }\n}\n</code></pre>"},{"location":"api-reference/vouchers/#response_1","title":"Response","text":"<pre><code>{\n  \"is_valid\": true,\n  \"discount_amount\": 20.00,\n  \"currency\": \"USD\"\n}\n</code></pre>"},{"location":"api-reference/vouchers/#apply-voucher","title":"Apply Voucher","text":"<pre><code>POST /vouchers/apply\n</code></pre>"},{"location":"api-reference/vouchers/#request-body_2","title":"Request Body","text":"<pre><code>{\n  \"code\": \"SUMMER2024\",\n  \"order_id\": \"order_123\"\n}\n</code></pre>"},{"location":"api-reference/vouchers/#response_2","title":"Response","text":"<pre><code>{\n  \"id\": \"v_123\",\n  \"code\": \"SUMMER2024\",\n  \"order_id\": \"order_123\",\n  \"discount_amount\": 20.00,\n  \"currency\": \"USD\",\n  \"applied_at\": \"2024-03-20T10:01:00Z\"\n}\n</code></pre>"},{"location":"api-reference/vouchers/#list-vouchers","title":"List Vouchers","text":"<pre><code>GET /vouchers\n</code></pre>"},{"location":"api-reference/vouchers/#query-parameters","title":"Query Parameters","text":"Parameter Type Description <code>limit</code> integer Number of results <code>offset</code> integer Result offset <code>status</code> string Voucher status"},{"location":"api-reference/vouchers/#response_3","title":"Response","text":"<pre><code>{\n  \"data\": [\n    {\n      \"id\": \"v_123\",\n      \"code\": \"SUMMER2024\",\n      \"type\": \"percentage\",\n      \"value\": 20,\n      \"status\": \"active\"\n    }\n  ],\n  \"total\": 100,\n  \"limit\": 10,\n  \"offset\": 0\n}\n</code></pre>"},{"location":"api-reference/vouchers/#get-voucher","title":"Get Voucher","text":"<pre><code>GET /vouchers/{voucher_id}\n</code></pre>"},{"location":"api-reference/vouchers/#response_4","title":"Response","text":"<pre><code>{\n  \"id\": \"v_123\",\n  \"code\": \"SUMMER2024\",\n  \"type\": \"percentage\",\n  \"value\": 20,\n  \"conditions\": {\n    \"min_order_value\": 50.00,\n    \"max_uses\": 1000\n  },\n  \"status\": \"active\",\n  \"created_at\": \"2024-03-20T10:00:00Z\"\n}\n</code></pre>"},{"location":"api-reference/vouchers/#update-voucher","title":"Update Voucher","text":"<pre><code>PUT /vouchers/{voucher_id}\n</code></pre>"},{"location":"api-reference/vouchers/#request-body_3","title":"Request Body","text":"<pre><code>{\n  \"value\": 25,\n  \"conditions\": {\n    \"min_order_value\": 75.00\n  }\n}\n</code></pre>"},{"location":"api-reference/vouchers/#response_5","title":"Response","text":"<pre><code>{\n  \"id\": \"v_123\",\n  \"code\": \"SUMMER2024\",\n  \"type\": \"percentage\",\n  \"value\": 25,\n  \"conditions\": {\n    \"min_order_value\": 75.00,\n    \"max_uses\": 1000\n  },\n  \"updated_at\": \"2024-03-20T10:02:00Z\"\n}\n</code></pre>"},{"location":"api-reference/vouchers/#delete-voucher","title":"Delete Voucher","text":"<pre><code>DELETE /vouchers/{voucher_id}\n</code></pre>"},{"location":"api-reference/vouchers/#response_6","title":"Response","text":"<pre><code>{\n  \"id\": \"v_123\",\n  \"deleted_at\": \"2024-03-20T10:03:00Z\"\n}\n</code></pre>"},{"location":"api-reference/vouchers/#error-responses","title":"Error Responses","text":""},{"location":"api-reference/vouchers/#invalid-request","title":"Invalid Request","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"INVALID_REQUEST\",\n    \"message\": \"Request validation failed\",\n    \"details\": [\n      {\n        \"field\": \"value\",\n        \"message\": \"Value must be between 0 and 100\"\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"api-reference/vouchers/#not-found","title":"Not Found","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"VOUCHER_NOT_FOUND\",\n    \"message\": \"Voucher not found\",\n    \"details\": {\n      \"voucher_id\": \"v_123\"\n    }\n  }\n}\n</code></pre>"},{"location":"api-reference/vouchers/#rate-limits","title":"Rate Limits","text":"Endpoint Limit Window <code>/vouchers</code> 100 requests 1 minute <code>/vouchers/validate</code> 200 requests 1 minute <code>/vouchers/apply</code> 100 requests 1 minute"},{"location":"api-reference/vouchers/#next-steps","title":"Next Steps","text":"<ul> <li>Review validation reference</li> <li>Check analytics endpoints</li> <li>See advanced types</li> </ul>"},{"location":"getting-started/authentication/","title":"Authentication","text":"<p>Learn how to authenticate with Voucher API and manage API keys securely.</p>"},{"location":"getting-started/authentication/#api-key-management","title":"API key management","text":"<p>Voucher API uses API keys for authentication. Each API key is associated with a specific account and has defined permissions.</p>"},{"location":"getting-started/authentication/#creating-api-keys","title":"Creating API keys","text":"<ol> <li>Log in to Voucher Dashboard</li> <li>Navigate to Settings &gt; API Keys</li> <li>Click \"Create New API Key\"</li> <li>Select required permissions</li> <li>Copy and securely store your API key</li> </ol> <p>API key security</p> <p>Never share your API key or commit it to version control. Store it securely using environment variables or a secrets manager.</p>"},{"location":"getting-started/authentication/#request-authentication","title":"Request authentication","text":"<p>Include your API key in all requests using the Authorization header:</p> <pre><code>curl -X GET \"https://api.voucher.com/v1/vouchers\" \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\"\n</code></pre>"},{"location":"getting-started/authentication/#api-key-permissions","title":"API key permissions","text":"Permission Description <code>vouchers:read</code> View vouchers and their details <code>vouchers:write</code> Create and update vouchers <code>vouchers:delete</code> Delete vouchers <code>analytics:read</code> Access analytics data <code>webhooks:manage</code> Manage webhook configurations"},{"location":"getting-started/authentication/#security-best-practices","title":"Security best practices","text":"<ol> <li>Key rotation</li> <li>Rotate API keys regularly</li> <li>Use different keys for different environments</li> <li> <p>Revoke compromised keys immediately</p> </li> <li> <p>Environment management</p> </li> <li>Use different API keys for development and production</li> <li>Store keys in environment variables</li> <li> <p>Never hardcode keys in application code</p> </li> <li> <p>Error handling</p> </li> <li>Handle authentication errors gracefully</li> <li>Implement proper retry logic</li> <li>Log authentication failures</li> </ol>"},{"location":"getting-started/authentication/#implementation-examples","title":"Implementation examples","text":"JavaScriptNode.js <pre><code>import { VouchersAPI } from '@voucher/vouchers-sdk';\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\n// Test the connection\ntry {\n  const response = await vouchers.ping();\n  console.log('Connected successfully!');\n} catch (error) {\n  console.error('Authentication failed:', error.message);\n}\n</code></pre> <pre><code>const { VouchersAPI } = require('@voucher/vouchers-sdk');\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\n// Test the connection\nvouchers.ping()\n  .then(response =&gt; {\n    console.log('Connected successfully!');\n  })\n  .catch(error =&gt; {\n    console.error('Authentication failed:', error.message);\n  });\n</code></pre>"},{"location":"getting-started/authentication/#error-responses","title":"Error responses","text":"<p>Authentication errors return HTTP 401 status code:</p> <pre><code>{\n  \"error\": {\n    \"code\": \"AUTH_INVALID_KEY\",\n    \"message\": \"Invalid API key\",\n    \"details\": \"The provided API key is invalid or has been revoked\"\n  }\n}\n</code></pre>"},{"location":"getting-started/authentication/#next-steps","title":"Next steps","text":"<ul> <li>Review Quick start guide to begin using the API</li> <li>See Error codes for handling authentication errors</li> <li>Learn about Rate limits for API usage</li> </ul>"},{"location":"getting-started/core-concepts/","title":"Understanding Voucher API","text":"<p>This explanation helps you understand key concepts and principles behind Voucher API, how they relate to each other, and why they work the way they do.</p>"},{"location":"getting-started/core-concepts/#what-is-a-voucher","title":"What is a voucher?","text":"<p>A voucher in our system represents a discount or promotional offer that can be applied to customer orders. Think of it as a digital coupon that contains all rules and conditions for applying a discount.</p>"},{"location":"getting-started/core-concepts/#voucher-anatomy","title":"Voucher anatomy","text":"<p>Every voucher consists of several key components that work together:</p> <ol> <li>Identity and Type</li> <li>Unique identifier (code or ID)</li> <li>Discount type (percentage, fixed amount, or shipping)</li> <li> <p>These determine how the voucher is recognized and what kind of discount it provides</p> </li> <li> <p>Value and Limits</p> </li> <li>Actual discount value (e.g., 10% or $20)</li> <li>Maximum discount amounts</li> <li> <p>These define scope and impact of the discount</p> </li> <li> <p>Conditions and Rules</p> </li> <li>When the voucher can be used</li> <li>What it can be used for</li> <li>Who can use it</li> <li> <p>These ensure the voucher is used appropriately</p> </li> <li> <p>Validity Period</p> </li> <li>Start and end dates</li> <li>Time restrictions</li> <li>These control when the voucher is active</li> </ol>"},{"location":"getting-started/core-concepts/#how-validation-works","title":"How validation works","text":"<p>Validation is the process of checking whether a voucher can be used for a specific order. It's like a security guard that ensures all rules are followed before allowing a discount to be applied.</p>"},{"location":"getting-started/core-concepts/#validation-process","title":"Validation process","text":"<pre><code>graph TD\n    A[Start Validation] --&gt; B{Basic Checks}\n    B --&gt;|Pass| C{Condition Checks}\n    C --&gt;|Pass| D[Validation Success]\n    B --&gt;|Fail| E[Validation Failed]\n    C --&gt;|Fail| E</code></pre> <ol> <li>Basic Checks</li> <li>Verifies the voucher exists and is active</li> <li>Ensures the voucher hasn't expired</li> <li>Confirms the voucher hasn't been used</li> <li> <p>These are the fundamental requirements</p> </li> <li> <p>Condition Checks</p> </li> <li>Validates order value requirements</li> <li>Checks item eligibility</li> <li>Verifies customer restrictions</li> <li>These ensure the voucher is used correctly</li> </ol>"},{"location":"getting-started/core-concepts/#redemption-lifecycle","title":"Redemption lifecycle","text":"<p>Redemption is the process of actually using a voucher. It's like a transaction that converts a voucher into an actual discount.</p>"},{"location":"getting-started/core-concepts/#redemption-journey","title":"Redemption journey","text":"<pre><code>graph LR\n    A[Pre-redemption] --&gt; B[Redemption] --&gt; C[Post-redemption]\n    B --&gt; D[Webhook Notification]\n    C --&gt; E[Analytics Update]</code></pre> <ol> <li>Pre-redemption Phase</li> <li>Final validation checks</li> <li>Discount calculation</li> <li> <p>This ensures everything is ready for redemption</p> </li> <li> <p>Redemption Phase</p> </li> <li>Marks the voucher as used</li> <li>Records the transaction</li> <li> <p>This is the actual application of the discount</p> </li> <li> <p>Post-redemption Phase</p> </li> <li>Updates analytics</li> <li>Triggers customer events</li> <li>This maintains the system's state</li> </ol>"},{"location":"getting-started/core-concepts/#customer-management-explained","title":"Customer management explained","text":"<p>Customer management is about understanding and controlling how customers interact with vouchers. It's like a set of rules that ensure fair and effective use of discounts.</p>"},{"location":"getting-started/core-concepts/#customer-interaction-model","title":"Customer interaction model","text":"<pre><code>graph TD\n    A[Customer] --&gt; B{Eligibility Check}\n    B --&gt;|Eligible| C[Usage Limits]\n    B --&gt;|Not Eligible| D[Restricted]\n    C --&gt; E[Usage Tracking]</code></pre> <ol> <li>Eligibility System</li> <li>Customer segmentation</li> <li>Usage history tracking</li> <li>Purchase history analysis</li> <li> <p>This determines who can use vouchers</p> </li> <li> <p>Usage Control</p> </li> <li>Per-customer limits</li> <li>Time-based restrictions</li> <li>Value-based controls</li> <li>This prevents abuse and ensures fair use</li> </ol>"},{"location":"getting-started/core-concepts/#analytics-and-insights","title":"Analytics and insights","text":"<p>Analytics in Voucher API provides insights into how vouchers are being used and their impact on your business.</p>"},{"location":"getting-started/core-concepts/#analytics-ecosystem","title":"Analytics ecosystem","text":"<pre><code>graph TD\n    A[Event Recording] --&gt; B[Data Processing]\n    B --&gt; C[Metrics Calculation]\n    C --&gt; D[Insights Generation]</code></pre> <ol> <li>Usage Analytics</li> <li>Tracks redemption rates</li> <li>Measures discount impact</li> <li>Monitors customer engagement</li> <li> <p>This helps understand voucher effectiveness</p> </li> <li> <p>Performance Analytics</p> </li> <li>Monitors system performance</li> <li>Tracks error rates</li> <li>Measures response times</li> <li>This ensures system reliability</li> </ol>"},{"location":"getting-started/core-concepts/#why-these-concepts-matter","title":"Why these concepts matter","text":"<p>Understanding these core concepts is crucial because:</p> <ol> <li>System Design</li> <li>Helps you design effective voucher strategies</li> <li>Enables proper implementation</li> <li> <p>Guides decision-making</p> </li> <li> <p>Problem Solving</p> </li> <li>Makes troubleshooting easier</li> <li>Helps identify issues</li> <li> <p>Guides solution development</p> </li> <li> <p>Business Impact</p> </li> <li>Enables better voucher management</li> <li>Improves customer experience</li> <li>Optimizes discount strategies</li> </ol>"},{"location":"getting-started/core-concepts/#next-steps","title":"Next steps","text":"<ul> <li>Review quick start guide to see these concepts in action</li> <li>Check authentication guide to understand security</li> <li>See error codes for troubleshooting</li> </ul>"},{"location":"getting-started/quick-start/","title":"Quick Start Guide","text":"<p>Get started with Voucher API in minutes. This guide walks through creating your first voucher and applying it to an order.</p>"},{"location":"getting-started/quick-start/#prerequisites","title":"Prerequisites","text":"<ul> <li>Voucher API account</li> <li>API key</li> <li>Basic understanding of REST APIs</li> </ul>"},{"location":"getting-started/quick-start/#create-first-voucher","title":"Create First Voucher","text":"<p>Create a simple percentage discount voucher:</p> <pre><code>curl -X POST \"https://api.voucher.com/v1/vouchers\" \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"code\": \"WELCOME10\",\n    \"type\": \"percentage\",\n    \"discount_config\": {\n      \"percentage\": 10.0\n    },\n    \"conditions\": {\n      \"min_order_value\": 25.00\n    }\n  }'\n</code></pre>"},{"location":"getting-started/quick-start/#validate-voucher","title":"Validate Voucher","text":"<p>Validate a voucher before applying it:</p> <pre><code>curl -X POST \"https://api.voucher.com/v1/vouchers/validate\" \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"code\": \"WELCOME10\",\n    \"order_value\": 100.00\n  }'\n</code></pre>"},{"location":"getting-started/quick-start/#apply-voucher","title":"Apply Voucher","text":"<p>Apply the validated voucher to an order:</p> <pre><code>curl -X POST \"https://api.voucher.com/v1/vouchers/apply\" \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"code\": \"WELCOME10\",\n    \"order_id\": \"order_123\",\n    \"order_value\": 100.00\n  }'\n</code></pre>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<p>Now that you've created your first voucher, explore more advanced features:</p> <ul> <li>Complex Discount Types - BOGO, tiered pricing, and conditional logic</li> <li>Analytics &amp; Reporting - Track performance and ROI</li> <li>Webhook Integration - Real-time event notifications</li> </ul>"},{"location":"getting-started/quick-start/#need-help","title":"Need Help?","text":"<ul> <li>\ud83d\udcda Browse full API reference</li> <li>\ud83d\udcac Join community forum</li> <li>\ud83d\udce7 Contact support</li> <li>\ud83d\udc1b Report issues on GitHub</li> </ul> <p>Pro Tips</p> <ul> <li>Always validate vouchers before applying them</li> <li>Use webhooks to track voucher events in real-time</li> <li>Monitor usage analytics to optimize discount strategies</li> <li>Test thoroughly in sandbox environment first</li> </ul>"},{"location":"guides/complex-discounts/","title":"Complex discount types","text":"<p>Learn how to create and manage advanced discount scenarios using Voucher API.</p>"},{"location":"guides/complex-discounts/#bogo-discounts","title":"BOGO discounts","text":"<p>Buy-one-get-one (BOGO) offers allow customers to receive free or discounted items when purchasing specific products.</p>"},{"location":"guides/complex-discounts/#bogo-configuration","title":"BOGO configuration","text":"<pre><code>{\n  \"type\": \"bogo\",\n  \"discount_config\": {\n    \"buy_quantity\": 1,\n    \"get_quantity\": 1,\n    \"get_discount\": 100,\n    \"get_discount_type\": \"percentage\",\n    \"applicable_items\": [\"product_1\", \"product_2\"]\n  }\n}\n</code></pre>"},{"location":"guides/complex-discounts/#implementation","title":"Implementation","text":"JavaScriptNode.js <pre><code>import { VouchersAPI } from '@voucher/vouchers-sdk';\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\nconst bogoVoucher = await vouchers.create({\n  code: 'BOGO50',\n  type: 'bogo',\n  config: {\n    buy_quantity: 1,\n    get_quantity: 1,\n    get_discount: 50,\n    get_discount_type: 'percentage',\n    applicable_items: ['item_1', 'item_2']\n  }\n});\n</code></pre> <pre><code>const { VouchersAPI } = require('@voucher/vouchers-sdk');\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\nconst bogoVoucher = await vouchers.create({\n  code: 'BOGO50',\n  type: 'bogo',\n  config: {\n    buy_quantity: 1,\n    get_quantity: 1,\n    get_discount: 50,\n    get_discount_type: 'percentage',\n    applicable_items: ['item_1', 'item_2']\n  }\n});\n</code></pre>"},{"location":"guides/complex-discounts/#tiered-discounts","title":"Tiered discounts","text":"<p>Tiered discounts provide different discount levels based on purchase quantity or value.</p>"},{"location":"guides/complex-discounts/#tiered-configuration","title":"Tiered configuration","text":"<pre><code>{\n  \"type\": \"tiered\",\n  \"discount_config\": {\n    \"tiers\": [\n      {\n        \"threshold\": 100,\n        \"discount\": 10,\n        \"discount_type\": \"percentage\"\n      },\n      {\n        \"threshold\": 200,\n        \"discount\": 15,\n        \"discount_type\": \"percentage\"\n      },\n      {\n        \"threshold\": 500,\n        \"discount\": 20,\n        \"discount_type\": \"percentage\"\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"guides/complex-discounts/#implementation_1","title":"Implementation","text":"JavaScriptNode.js <pre><code>const tieredVoucher = await vouchers.create({\n  code: 'TIERED20',\n  type: 'tiered',\n  config: {\n    tiers: [\n      {\n        min_value: 100.00,\n        discount: 10,\n        discount_type: 'percentage'\n      },\n      {\n        min_value: 200.00,\n        discount: 20,\n        discount_type: 'percentage'\n      }\n    ]\n  }\n});\n</code></pre> <pre><code>const { VouchersAPI } = require('@voucher/vouchers-sdk');\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\nconst tieredVoucher = await vouchers.create({\n  code: 'TIERED20',\n  type: 'tiered',\n  config: {\n    tiers: [\n      {\n        min_value: 100.00,\n        discount: 10,\n        discount_type: 'percentage'\n      },\n      {\n        min_value: 200.00,\n        discount: 20,\n        discount_type: 'percentage'\n      }\n    ]\n  }\n});\n</code></pre>"},{"location":"guides/complex-discounts/#conditional-discounts","title":"Conditional discounts","text":"<p>Conditional discounts apply different rules based on specific conditions.</p>"},{"location":"guides/complex-discounts/#conditional-configuration","title":"Conditional configuration","text":"<pre><code>{\n  \"type\": \"conditional\",\n  \"discount_config\": {\n    \"conditions\": [\n      {\n        \"if\": {\n          \"customer_type\": \"student\",\n          \"min_order_value\": 50\n        },\n        \"then\": {\n          \"discount\": 20,\n          \"discount_type\": \"percentage\"\n        }\n      },\n      {\n        \"if\": {\n          \"customer_type\": \"regular\",\n          \"min_order_value\": 100\n        },\n        \"then\": {\n          \"discount\": 10,\n          \"discount_type\": \"percentage\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"guides/complex-discounts/#implementation_2","title":"Implementation","text":"JavaScriptNode.js <pre><code>const conditionalVoucher = await vouchers.create({\n  code: 'PREMIUM15',\n  type: 'conditional',\n  config: {\n    conditions: [\n      {\n        type: 'customer_segment',\n        value: 'premium'\n      },\n      {\n        type: 'order_value',\n        operator: 'gte',\n        value: 100.00\n      }\n    ],\n    discount: 15,\n    discount_type: 'percentage'\n  }\n});\n</code></pre> <pre><code>const { VouchersAPI } = require('@voucher/vouchers-sdk');\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\nconst conditionalVoucher = await vouchers.create({\n  code: 'PREMIUM15',\n  type: 'conditional',\n  config: {\n    conditions: [\n      {\n        type: 'customer_segment',\n        value: 'premium'\n      },\n      {\n        type: 'order_value',\n        operator: 'gte',\n        value: 100.00\n      }\n    ],\n    discount: 15,\n    discount_type: 'percentage'\n  }\n});\n</code></pre>"},{"location":"guides/complex-discounts/#best-practices","title":"Best practices","text":"<ol> <li>Validation</li> <li>Test all discount scenarios</li> <li>Verify edge cases</li> <li> <p>Check customer eligibility</p> </li> <li> <p>Performance</p> </li> <li>Cache validation results</li> <li>Use batch operations</li> <li> <p>Monitor response times</p> </li> <li> <p>Error Handling</p> </li> <li>Handle validation errors</li> <li>Implement retry logic</li> <li>Log discount calculations</li> </ol>"},{"location":"guides/complex-discounts/#next-steps","title":"Next steps","text":"<ul> <li>Review integration patterns</li> <li>Check analytics integration</li> <li>See error handling</li> </ul>"},{"location":"guides/complex-discounts/#additional-resources","title":"Additional resources","text":"<ul> <li>API Reference</li> <li>Webhook Documentation</li> <li>Rate Limits </li> </ul>"},{"location":"guides/first-voucher/","title":"Creating your first voucher","text":"<p>Learn how to create your first voucher using Voucher API.</p>"},{"location":"guides/first-voucher/#prerequisites","title":"Prerequisites","text":"<ul> <li>Voucher API account</li> <li>API key</li> <li>Basic understanding of REST APIs</li> </ul>"},{"location":"guides/first-voucher/#create-simple-voucher","title":"Create simple voucher","text":"<p>Create a basic percentage discount voucher:</p> cURLJavaScriptNode.js <pre><code>curl -X POST \"https://api.voucher.com/v1/vouchers\" \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"code\": \"WELCOME10\",\n    \"type\": \"percentage\",\n    \"discount_config\": {\n      \"percentage\": 10.0\n    },\n    \"conditions\": {\n      \"min_order_value\": 25.00\n    }\n  }'\n</code></pre> <pre><code>import { VouchersAPI } from '@voucher/vouchers-sdk';\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\nconst newVoucher = await vouchers.create({\n  code: 'WELCOME10',\n  type: 'percentage',\n  discount_config: {\n    percentage: 10.0\n  },\n  conditions: {\n    min_order_value: 25.00\n  }\n});\n</code></pre> <pre><code>const { VouchersAPI } = require('@voucher/vouchers-sdk');\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\nconst newVoucher = await vouchers.create({\n  code: 'WELCOME10',\n  type: 'percentage',\n  discount_config: {\n    percentage: 10.0\n  },\n  conditions: {\n    min_order_value: 25.00\n  }\n});\n</code></pre>"},{"location":"guides/first-voucher/#validate-voucher","title":"Validate Voucher","text":"<p>Test the voucher before using it:</p> cURLJavaScriptNode.js <pre><code>curl -X POST \"https://api.voucher.com/v1/vouchers/validate\" \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"code\": \"WELCOME10\",\n    \"order_value\": 100.00\n  }'\n</code></pre> <pre><code>const validation = await vouchers.validate({\n  code: 'WELCOME10',\n  order: {\n    value: 100.00,\n    currency: 'USD'\n  }\n});\n\nif (validation.is_valid) {\n  console.log(`Discount amount: ${validation.discount_amount} ${validation.currency}`);\n}\n</code></pre> <pre><code>const validation = await vouchers.validate({\n  code: 'WELCOME10',\n  order: {\n    value: 100.00,\n    currency: 'USD'\n  }\n});\n\nif (validation.is_valid) {\n  console.log(`Discount amount: ${validation.discount_amount} ${validation.currency}`);\n}\n</code></pre>"},{"location":"guides/first-voucher/#apply-voucher","title":"Apply Voucher","text":"<p>Apply the validated voucher to an order:</p> cURLJavaScriptNode.js <pre><code>curl -X POST \"https://api.voucher.com/v1/vouchers/apply\" \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"code\": \"WELCOME10\",\n    \"order_id\": \"order_123\",\n    \"order_value\": 100.00\n  }'\n</code></pre> <pre><code>const application = await vouchers.apply({\n  code: 'WELCOME10',\n  order_id: 'order_123'\n});\n\nconsole.log(`Voucher applied successfully! Discount: ${application.discount_amount} ${application.currency}`);\n</code></pre> <pre><code>const application = await vouchers.apply({\n  code: 'WELCOME10',\n  order_id: 'order_123'\n});\n\nconsole.log(`Voucher applied successfully! Discount: ${application.discount_amount} ${application.currency}`);\n</code></pre>"},{"location":"guides/first-voucher/#best-practices","title":"Best Practices","text":"<ol> <li>Validation</li> <li>Always validate vouchers before applying</li> <li>Check all conditions</li> <li> <p>Verify customer eligibility</p> </li> <li> <p>Error Handling</p> </li> <li>Handle validation errors</li> <li>Implement retry logic</li> <li> <p>Log voucher operations</p> </li> <li> <p>Security</p> </li> <li>Use secure API keys</li> <li>Validate input data</li> <li>Monitor usage</li> </ol>"},{"location":"guides/first-voucher/#next-steps","title":"Next Steps","text":"<ul> <li>Review complex discount types</li> <li>Check integration patterns</li> <li>See error handling</li> </ul>"},{"location":"guides/first-voucher/#additional-resources","title":"Additional resources","text":"<ul> <li>API Reference</li> <li>Webhook Documentation </li> </ul>"},{"location":"guides/integration-patterns/","title":"Integration patterns","text":"<p>Learn best practices and common patterns for integrating Voucher API into your applications.</p>"},{"location":"guides/integration-patterns/#common-integration-scenarios","title":"Common integration scenarios","text":""},{"location":"guides/integration-patterns/#e-commerce-integration","title":"E-commerce integration","text":"<pre><code>graph TD\n    A[Customer] --&gt;|Adds items| B[Cart]\n    B --&gt;|Applies voucher| C[Voucher API]\n    C --&gt;|Validates| D[Order]\n    D --&gt;|Processes| E[Payment]</code></pre> <ol> <li>Cart integration</li> <li>Validate vouchers during cart updates</li> <li>Apply discounts in real-time</li> <li> <p>Handle multiple vouchers</p> </li> <li> <p>Checkout flow</p> </li> <li>Validate final order</li> <li>Apply confirmed discount</li> <li>Record redemption</li> </ol>"},{"location":"guides/integration-patterns/#mobile-app-integration","title":"Mobile app integration","text":"<pre><code>graph LR\n    A[App] --&gt;|API Calls| B[Backend]\n    B --&gt;|Validates| C[Voucher API]\n    C --&gt;|Returns| B\n    B --&gt;|Updates| A</code></pre> <ol> <li>API integration</li> <li>Use SDKs for native platforms</li> <li>Handle offline scenarios</li> <li> <p>Implement retry logic</p> </li> <li> <p>User experience</p> </li> <li>Show real-time validation</li> <li>Display discount preview</li> <li>Handle errors gracefully</li> </ol>"},{"location":"guides/integration-patterns/#implementation-examples","title":"Implementation examples","text":"JavaScriptNode.js <pre><code>import { VouchersAPI } from '@voucher/vouchers-sdk';\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\n// Create a webhook handler\nconst webhookHandler = vouchers.createWebhookHandler({\n  secret: 'your-webhook-secret'\n});\n\n// Handle incoming webhook events\napp.post('/webhooks/voucher', async (req, res) =&gt; {\n  try {\n    const event = await webhookHandler.verify(req.body, req.headers['x-voucher-signature']);\n\n    switch (event.type) {\n      case 'voucher.created':\n        console.log('New voucher created:', event.data);\n        break;\n      case 'voucher.applied':\n        console.log('Voucher applied:', event.data);\n        break;\n    }\n\n    res.status(200).send('Webhook processed');\n  } catch (error) {\n    console.error('Webhook error:', error);\n    res.status(400).send('Invalid webhook');\n  }\n});\n</code></pre> <pre><code>const { VouchersAPI } = require('@voucher/vouchers-sdk');\nconst express = require('express');\nconst app = express();\n\nconst vouchers = new VouchersAPI({\n  apiKey: 'your-api-key'\n});\n\n// Create a webhook handler\nconst webhookHandler = vouchers.createWebhookHandler({\n  secret: 'your-webhook-secret'\n});\n\n// Handle incoming webhook events\napp.post('/webhooks/voucher', async (req, res) =&gt; {\n  try {\n    const event = await webhookHandler.verify(req.body, req.headers['x-voucher-signature']);\n\n    switch (event.type) {\n      case 'voucher.created':\n        console.log('New voucher created:', event.data);\n        break;\n      case 'voucher.applied':\n        console.log('Voucher applied:', event.data);\n        break;\n    }\n\n    res.status(200).send('Webhook processed');\n  } catch (error) {\n    console.error('Webhook error:', error);\n    res.status(400).send('Invalid webhook');\n  }\n});\n</code></pre>"},{"location":"guides/integration-patterns/#best-practices","title":"Best practices","text":"<ol> <li>Error handling</li> <li>Implement proper error handling</li> <li>Use retry mechanisms</li> <li> <p>Log validation failures</p> </li> <li> <p>Performance</p> </li> <li>Cache validation results</li> <li>Use batch operations</li> <li> <p>Implement rate limiting</p> </li> <li> <p>Security</p> </li> <li>Validate server-side</li> <li>Use secure API keys</li> <li>Implement proper authentication</li> </ol>"},{"location":"guides/integration-patterns/#testing-strategy","title":"Testing strategy","text":"<ol> <li>Unit tests</li> <li>Test validation logic</li> <li>Mock API responses</li> <li> <p>Verify error handling</p> </li> <li> <p>Integration tests</p> </li> <li>Test end-to-end flows</li> <li>Verify discount calculations</li> <li> <p>Check error scenarios</p> </li> <li> <p>Load testing</p> </li> <li>Test under load</li> <li>Verify rate limits</li> <li>Check performance</li> </ol>"},{"location":"guides/integration-patterns/#next-steps","title":"Next steps","text":"<ul> <li>Review complex discount types</li> <li>Check analytics integration</li> <li>See error handling</li> </ul>"},{"location":"guides/integration-patterns/#additional-resources","title":"Additional resources","text":"<ul> <li>API reference</li> <li>Webhook documentation</li> <li>Rate limits </li> </ul>"},{"location":"reference/changelog/","title":"Changelog Reference","text":"<p>Track changes and updates to Voucher API.</p>"},{"location":"reference/changelog/#version-200-2024-03-20","title":"Version 2.0.0 (2024-03-20)","text":""},{"location":"reference/changelog/#added","title":"Added","text":"<ul> <li>New analytics endpoints</li> <li>Webhook event system</li> <li>Rate limit headers</li> <li>Batch operations</li> </ul>"},{"location":"reference/changelog/#changed","title":"Changed","text":"<ul> <li>Updated API base URL to <code>api.voucher.com</code></li> <li>Improved error responses</li> <li>Enhanced validation rules</li> <li>Updated SDK versions</li> </ul>"},{"location":"reference/changelog/#deprecated","title":"Deprecated","text":"<ul> <li>Legacy validation endpoint</li> <li>Old webhook format</li> <li>Deprecated SDK methods</li> </ul>"},{"location":"reference/changelog/#removed","title":"Removed","text":"<ul> <li>Support for v1 API</li> <li>Legacy authentication</li> <li>Deprecated endpoints</li> </ul>"},{"location":"reference/changelog/#version-190-2024-02-15","title":"Version 1.9.0 (2024-02-15)","text":""},{"location":"reference/changelog/#added_1","title":"Added","text":"<ul> <li>Customer insights API</li> <li>Export functionality</li> <li>New discount types</li> <li>SDK improvements</li> </ul>"},{"location":"reference/changelog/#changed_1","title":"Changed","text":"<ul> <li>Updated documentation</li> <li>Enhanced error handling</li> <li>Improved performance</li> <li>Better validation</li> </ul>"},{"location":"reference/changelog/#version-180-2024-01-10","title":"Version 1.8.0 (2024-01-10)","text":""},{"location":"reference/changelog/#added_2","title":"Added","text":"<ul> <li>Complex discount types</li> <li>Analytics dashboard</li> <li>Webhook support</li> <li>Rate limiting</li> </ul>"},{"location":"reference/changelog/#changed_2","title":"Changed","text":"<ul> <li>API response format</li> <li>Authentication flow</li> <li>SDK structure</li> <li>Documentation</li> </ul>"},{"location":"reference/changelog/#next-steps","title":"Next Steps","text":"<ul> <li>Review error handling</li> <li>Check rate limits</li> <li>See webhook events </li> </ul>"},{"location":"reference/errors/","title":"Error Handling Reference","text":"<p>Learn how to handle errors in Voucher API responses.</p>"},{"location":"reference/errors/#error-response-format","title":"Error Response Format","text":"<p>All error responses follow this format:</p> <pre><code>{\n  \"error\": {\n    \"code\": \"ERROR_CODE\",\n    \"message\": \"Error description\",\n    \"details\": \"Additional error details\"\n  }\n}\n</code></pre>"},{"location":"reference/errors/#common-error-codes","title":"Common Error Codes","text":""},{"location":"reference/errors/#authentication-errors","title":"Authentication Errors","text":"Code Description <code>INVALID_API_KEY</code> API key is invalid or expired <code>MISSING_API_KEY</code> API key is missing from request <code>INSUFFICIENT_PERMISSIONS</code> API key lacks required permissions"},{"location":"reference/errors/#validation-errors","title":"Validation Errors","text":"Code Description <code>INVALID_REQUEST</code> Request validation failed <code>INVALID_VOUCHER_CODE</code> Voucher code format is invalid <code>INVALID_DISCOUNT_CONFIG</code> Discount configuration is invalid <code>INVALID_CONDITIONS</code> Voucher conditions are invalid"},{"location":"reference/errors/#voucher-errors","title":"Voucher Errors","text":"Code Description <code>VOUCHER_NOT_FOUND</code> Voucher does not exist <code>VOUCHER_EXPIRED</code> Voucher has expired <code>VOUCHER_INVALID</code> Voucher is not valid for the order <code>VOUCHER_ALREADY_USED</code> Voucher has already been used <code>USAGE_LIMIT_EXCEEDED</code> Voucher usage limit reached"},{"location":"reference/errors/#rate-limit-errors","title":"Rate Limit Errors","text":"Code Description <code>RATE_LIMIT_EXCEEDED</code> Too many requests <code>CONCURRENT_LIMIT_EXCEEDED</code> Too many concurrent requests"},{"location":"reference/errors/#error-handling-examples","title":"Error Handling Examples","text":""},{"location":"reference/errors/#authentication-error","title":"Authentication Error","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"INVALID_API_KEY\",\n    \"message\": \"API key is invalid\",\n    \"details\": {\n      \"key_id\": \"key_123\",\n      \"expired_at\": \"2024-03-19T23:59:59Z\"\n    }\n  }\n}\n</code></pre>"},{"location":"reference/errors/#validation-error","title":"Validation Error","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"INVALID_REQUEST\",\n    \"message\": \"Request validation failed\",\n    \"details\": [\n      {\n        \"field\": \"discount_config.percentage\",\n        \"message\": \"Percentage must be between 0.01 and 100.00\",\n        \"code\": \"INVALID_PERCENTAGE\"\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"reference/errors/#voucher-error","title":"Voucher Error","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"VOUCHER_INVALID\",\n    \"message\": \"Voucher is not valid for this order\",\n    \"details\": {\n      \"reason\": \"Order value below minimum\",\n      \"min_required\": 25.00,\n      \"current_value\": 20.00\n    }\n  }\n}\n</code></pre>"},{"location":"reference/errors/#rate-limit-error","title":"Rate Limit Error","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"RATE_LIMIT_EXCEEDED\",\n    \"message\": \"Too many requests\",\n    \"details\": {\n      \"limit\": 100,\n      \"reset_at\": \"2024-03-20T10:01:00Z\"\n    }\n  }\n}\n</code></pre>"},{"location":"reference/errors/#best-practices","title":"Best Practices","text":"<ol> <li>Error Handling</li> <li>Handle all error cases</li> <li>Show user-friendly messages</li> <li> <p>Log error details for debugging</p> </li> <li> <p>Rate Limiting</p> </li> <li>Implement exponential backoff</li> <li>Cache successful responses</li> <li> <p>Monitor rate limit headers</p> </li> <li> <p>Validation</p> </li> <li>Validate requests before sending</li> <li>Handle validation errors gracefully</li> <li>Provide clear error messages</li> </ol>"},{"location":"reference/errors/#next-steps","title":"Next Steps","text":"<ul> <li>Review voucher endpoints</li> <li>Check validation reference</li> <li>See rate limits </li> </ul>"},{"location":"reference/rate-limits/","title":"Rate Limits Reference","text":"<p>Learn about Voucher API rate limits and how to handle them.</p>"},{"location":"reference/rate-limits/#rate-limit-headers","title":"Rate Limit Headers","text":"<p>All API responses include rate limit headers:</p> <pre><code>X-RateLimit-Limit: 1000\nX-RateLimit-Remaining: 999\nX-RateLimit-Reset: 1710936000\n</code></pre>"},{"location":"reference/rate-limits/#default-limits","title":"Default Limits","text":"Limit Type Limit Window Hourly 1000 requests 1 hour Minute 100 requests 1 minute Second 10 requests 1 second"},{"location":"reference/rate-limits/#endpoint-specific-limits","title":"Endpoint-Specific Limits","text":"Endpoint Limit Window <code>/vouchers/validate</code> 200 requests 1 minute <code>/vouchers/apply</code> 100 requests 1 minute <code>/analytics/export</code> 10 requests 1 hour"},{"location":"reference/rate-limits/#rate-limit-errors","title":"Rate Limit Errors","text":"<p>When rate limit is exceeded:</p> <pre><code>{\n  \"error\": {\n    \"code\": \"RATE_LIMIT_EXCEEDED\",\n    \"message\": \"Too many requests\",\n    \"details\": {\n      \"limit\": 100,\n      \"reset_at\": \"2024-03-20T10:01:00Z\"\n    }\n  }\n}\n</code></pre>"},{"location":"reference/rate-limits/#best-practices","title":"Best Practices","text":"<ol> <li>Request Management</li> <li>Implement request queuing</li> <li>Use batch operations</li> <li> <p>Cache responses</p> </li> <li> <p>Error Handling</p> </li> <li>Implement exponential backoff</li> <li>Monitor rate limit headers</li> <li> <p>Handle retries gracefully</p> </li> <li> <p>Performance</p> </li> <li>Optimize request patterns</li> <li>Use appropriate endpoints</li> <li>Monitor usage patterns</li> </ol>"},{"location":"reference/rate-limits/#next-steps","title":"Next Steps","text":"<ul> <li>Review error handling</li> <li>Check voucher endpoints</li> <li>See webhook events </li> </ul>"},{"location":"reference/webhooks/","title":"Webhooks Reference","text":"<p>Learn about Voucher API webhooks and how to implement them.</p>"},{"location":"reference/webhooks/#webhook-events","title":"Webhook Events","text":"Event Description Payload <code>voucher.created</code> Voucher created Voucher object <code>voucher.updated</code> Voucher updated Voucher object <code>voucher.deleted</code> Voucher deleted Voucher ID <code>voucher.validated</code> Voucher validated Validation result <code>voucher.applied</code> Voucher applied Application result <code>voucher.expired</code> Voucher expired Voucher ID"},{"location":"reference/webhooks/#webhook-configuration","title":"Webhook Configuration","text":"<pre><code>{\n  \"url\": \"https://your-domain.com/webhooks/voucher\",\n  \"events\": [\"voucher.created\", \"voucher.updated\"],\n  \"secret\": \"your_webhook_secret\"\n}\n</code></pre>"},{"location":"reference/webhooks/#event-payloads","title":"Event Payloads","text":""},{"location":"reference/webhooks/#voucher-created","title":"Voucher Created","text":"<pre><code>{\n  \"event\": \"voucher.created\",\n  \"data\": {\n    \"id\": \"v_123\",\n    \"code\": \"SUMMER2024\",\n    \"type\": \"percentage\",\n    \"value\": 20,\n    \"created_at\": \"2024-03-20T10:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"reference/webhooks/#voucher-validated","title":"Voucher Validated","text":"<pre><code>{\n  \"event\": \"voucher.validated\",\n  \"data\": {\n    \"voucher_id\": \"v_123\",\n    \"is_valid\": true,\n    \"discount_amount\": 20.00,\n    \"validated_at\": \"2024-03-20T10:01:00Z\"\n  }\n}\n</code></pre>"},{"location":"reference/webhooks/#security","title":"Security","text":"<ol> <li>Signature Verification</li> <li>Verify webhook signatures</li> <li>Use secure webhook secrets</li> <li> <p>Implement request validation</p> </li> <li> <p>TLS Requirements</p> </li> <li>Use HTTPS endpoints</li> <li>Validate SSL certificates</li> <li> <p>Monitor certificate expiry</p> </li> <li> <p>IP Allowlisting</p> </li> <li>Allowlist Voucher API IPs</li> <li>Monitor IP changes</li> <li>Update allowlist regularly</li> </ol>"},{"location":"reference/webhooks/#best-practices","title":"Best Practices","text":"<ol> <li>Implementation</li> <li>Handle duplicate events</li> <li>Implement idempotency</li> <li> <p>Process events asynchronously</p> </li> <li> <p>Error Handling</p> </li> <li>Log failed deliveries</li> <li>Implement retry logic</li> <li> <p>Monitor webhook health</p> </li> <li> <p>Testing</p> </li> <li>Use webhook testing tools</li> <li>Verify event handling</li> <li>Test error scenarios</li> </ol>"},{"location":"reference/webhooks/#next-steps","title":"Next Steps","text":"<ul> <li>Review error handling</li> <li>Check rate limits</li> <li>See changelog </li> </ul>"},{"location":"sdks/javascript/","title":"JavaScript SDK Reference","text":"<p>Learn how to use Voucher API with JavaScript.</p>"},{"location":"sdks/javascript/#installation","title":"Installation","text":"<pre><code>npm install @voucher/api\n</code></pre>"},{"location":"sdks/javascript/#configuration","title":"Configuration","text":"<pre><code>import { VoucherClient } from '@voucher/api';\n\nconst client = new VoucherClient({\n  apiKey: 'your_api_key',\n  environment: 'production' // or 'sandbox'\n});\n</code></pre>"},{"location":"sdks/javascript/#core-features","title":"Core Features","text":""},{"location":"sdks/javascript/#create-voucher","title":"Create Voucher","text":"<pre><code>const voucher = await client.vouchers.create({\n  code: 'SUMMER2024',\n  type: 'percentage',\n  value: 20,\n  conditions: {\n    min_order_value: 50.00,\n    max_uses: 1000\n  }\n});\n</code></pre>"},{"location":"sdks/javascript/#validate-voucher","title":"Validate Voucher","text":"<pre><code>const validation = await client.vouchers.validate({\n  code: 'SUMMER2024',\n  order: {\n    value: 100.00,\n    currency: 'USD'\n  }\n});\n</code></pre>"},{"location":"sdks/javascript/#apply-voucher","title":"Apply Voucher","text":"<pre><code>const result = await client.vouchers.apply({\n  code: 'SUMMER2024',\n  order_id: 'order_123'\n});\n</code></pre>"},{"location":"sdks/javascript/#advanced-features","title":"Advanced Features","text":""},{"location":"sdks/javascript/#batch-operations","title":"Batch Operations","text":"<pre><code>const results = await client.vouchers.batchCreate([\n  {\n    code: 'SUMMER2024',\n    type: 'percentage',\n    value: 20\n  },\n  {\n    code: 'WINTER2024',\n    type: 'fixed',\n    value: 10.00\n  }\n]);\n</code></pre>"},{"location":"sdks/javascript/#analytics","title":"Analytics","text":"<pre><code>const analytics = await client.analytics.getPerformance({\n  start_date: '2024-01-01',\n  end_date: '2024-03-20'\n});\n</code></pre>"},{"location":"sdks/javascript/#error-handling","title":"Error Handling","text":"<pre><code>try {\n  const voucher = await client.vouchers.create({\n    code: 'SUMMER2024',\n    type: 'percentage',\n    value: 20\n  });\n} catch (error) {\n  if (error.code === 'INVALID_REQUEST') {\n    // Handle validation error\n  } else if (error.code === 'RATE_LIMIT_EXCEEDED') {\n    // Handle rate limit error\n  }\n}\n</code></pre>"},{"location":"sdks/javascript/#webhooks","title":"Webhooks","text":"<pre><code>import { WebhookHandler } from '@voucher/api';\n\nconst handler = new WebhookHandler('your_webhook_secret');\n\napp.post('/webhooks/voucher', async (req, res) =&gt; {\n  const event = handler.verify(req.body, req.headers['x-voucher-signature']);\n\n  switch (event.type) {\n    case 'voucher.created':\n      // Handle created event\n      break;\n    case 'voucher.validated':\n      // Handle validated event\n      break;\n  }\n\n  res.status(200).send('Webhook received');\n});\n</code></pre>"},{"location":"sdks/javascript/#best-practices","title":"Best Practices","text":"<ol> <li>Error Handling</li> <li>Use try-catch blocks</li> <li>Handle specific error codes</li> <li> <p>Implement retry logic</p> </li> <li> <p>Performance</p> </li> <li>Use batch operations</li> <li>Cache responses</li> <li> <p>Monitor rate limits</p> </li> <li> <p>Security</p> </li> <li>Store API keys securely</li> <li>Verify webhook signatures</li> <li>Use HTTPS endpoints</li> </ol>"},{"location":"sdks/javascript/#next-steps","title":"Next Steps","text":"<ul> <li>Review error handling</li> <li>Check rate limits</li> <li>See webhook events</li> <li>Learn about complex discounts</li> <li>Explore integration patterns</li> </ul>"},{"location":"sdks/javascript/#additional-resources","title":"Additional Resources","text":"<ul> <li>API Reference</li> <li>Webhook Documentation</li> <li>Rate Limits </li> </ul>"},{"location":"sdks/python/","title":"Python SDK Reference","text":"<p>Learn how to use Voucher API with Python.</p>"},{"location":"sdks/python/#installation","title":"Installation","text":"<pre><code>pip install voucher-api\n</code></pre>"},{"location":"sdks/python/#configuration","title":"Configuration","text":"<pre><code>from voucher_api import VoucherClient\n\nclient = VoucherClient(\n    api_key='your_api_key',\n    environment='production'  # or 'sandbox'\n)\n</code></pre>"},{"location":"sdks/python/#core-features","title":"Core Features","text":""},{"location":"sdks/python/#create-voucher","title":"Create Voucher","text":"<pre><code>voucher = client.vouchers.create(\n    code='SUMMER2024',\n    type='percentage',\n    value=20,\n    conditions={\n        'min_order_value': 50.00,\n        'max_uses': 1000\n    }\n)\n</code></pre>"},{"location":"sdks/python/#validate-voucher","title":"Validate Voucher","text":"<pre><code>validation = client.vouchers.validate(\n    code='SUMMER2024',\n    order={\n        'value': 100.00,\n        'currency': 'USD'\n    }\n)\n</code></pre>"},{"location":"sdks/python/#apply-voucher","title":"Apply Voucher","text":"<pre><code>result = client.vouchers.apply(\n    code='SUMMER2024',\n    order_id='order_123'\n)\n</code></pre>"},{"location":"sdks/python/#advanced-features","title":"Advanced Features","text":""},{"location":"sdks/python/#batch-operations","title":"Batch Operations","text":"<pre><code>results = client.vouchers.batch_create([\n    {\n        'code': 'SUMMER2024',\n        'type': 'percentage',\n        'value': 20\n    },\n    {\n        'code': 'WINTER2024',\n        'type': 'fixed',\n        'value': 10.00\n    }\n])\n</code></pre>"},{"location":"sdks/python/#analytics","title":"Analytics","text":"<pre><code>analytics = client.analytics.get_performance(\n    start_date='2024-01-01',\n    end_date='2024-03-20'\n)\n</code></pre>"},{"location":"sdks/python/#error-handling","title":"Error Handling","text":"<pre><code>try:\n    voucher = client.vouchers.create(\n        code='SUMMER2024',\n        type='percentage',\n        value=20\n    )\nexcept VoucherError as error:\n    if error.code == 'INVALID_REQUEST':\n        # Handle validation error\n        pass\n    elif error.code == 'RATE_LIMIT_EXCEEDED':\n        # Handle rate limit error\n        pass\n</code></pre>"},{"location":"sdks/python/#webhooks","title":"Webhooks","text":"<pre><code>from voucher_api import WebhookHandler\nfrom flask import Flask, request\n\napp = Flask(__name__)\nhandler = WebhookHandler('your_webhook_secret')\n\n@app.route('/webhooks/voucher', methods=['POST'])\ndef handle_webhook():\n    event = handler.verify(\n        request.data,\n        request.headers['X-Voucher-Signature']\n    )\n\n    if event.type == 'voucher.created':\n        # Handle created event\n        pass\n    elif event.type == 'voucher.validated':\n        # Handle validated event\n        pass\n\n    return 'Webhook received', 200\n</code></pre>"},{"location":"sdks/python/#best-practices","title":"Best Practices","text":"<ol> <li>Error Handling</li> <li>Use try-except blocks</li> <li>Handle specific error codes</li> <li> <p>Implement retry logic</p> </li> <li> <p>Performance</p> </li> <li>Use batch operations</li> <li>Cache responses</li> <li> <p>Monitor rate limits</p> </li> <li> <p>Security</p> </li> <li>Store API keys securely</li> <li>Verify webhook signatures</li> <li>Use HTTPS endpoints</li> </ol>"},{"location":"sdks/python/#next-steps","title":"Next Steps","text":"<ul> <li>Review error handling</li> <li>Check rate limits</li> <li>See webhook events</li> <li>Learn about complex discounts</li> <li>Explore integration patterns</li> </ul>"},{"location":"sdks/python/#additional-resources","title":"Additional Resources","text":"<ul> <li>API Reference</li> <li>Webhook Documentation</li> <li>Rate Limits</li> </ul>"},{"location":"sdks/python/#voucher-validation","title":"Voucher Validation","text":"<pre><code># Validate a voucher\nvalidation = client.vouchers.validate(\n    code='SUMMER2024',\n    order_value=100.00,\n    customer_id='customer_123',\n    items=[\n        {\n            'id': 'item_1',\n            'price': 50.00,\n            'quantity': 2\n        }\n    ]\n)\n\n# Check validation result\nif validation.is_valid:\n    print('Discount amount:', validation.discount_amount)\nelse:\n    print('Validation failed:', validation.error)\n</code></pre>"},{"location":"sdks/python/#voucher-application","title":"Voucher Application","text":"<pre><code># Apply a voucher\napplication = client.vouchers.apply(\n    code='SUMMER2024',\n    order_id='order_456',\n    customer_id='customer_123',\n    items=[\n        {\n            'id': 'item_1',\n            'price': 50.00,\n            'quantity': 2\n        }\n    ]\n)\n\n# Remove applied voucher\nclient.vouchers.remove(\n    code='SUMMER2024',\n    order_id='order_456'\n)\n</code></pre>"},{"location":"sdks/python/#analytics_1","title":"Analytics","text":"<pre><code># Get voucher analytics\nanalytics = client.analytics.get_voucher_stats(\n    voucher_id='SUMMER2024',\n    start_date='2024-01-01',\n    end_date='2024-12-31'\n)\n\n# Get redemption history\n</code></pre>"},{"location":"sdks/testing/","title":"Testing Reference","text":"<p>Learn how to test your Voucher API integration.</p>"},{"location":"sdks/testing/#test-environment","title":"Test Environment","text":""},{"location":"sdks/testing/#javascript","title":"JavaScript","text":"<pre><code>import { VoucherClient } from '@voucher/api';\n\nconst client = new VoucherClient({\n  apiKey: 'test_api_key',\n  environment: 'sandbox'\n});\n</code></pre>"},{"location":"sdks/testing/#python","title":"Python","text":"<pre><code>from voucher_api import VoucherClient\n\nclient = VoucherClient(\n    api_key='test_api_key',\n    environment='sandbox'\n)\n</code></pre>"},{"location":"sdks/testing/#test-data","title":"Test Data","text":""},{"location":"sdks/testing/#voucher-data","title":"Voucher Data","text":"<pre><code>{\n  \"code\": \"TEST2024\",\n  \"type\": \"percentage\",\n  \"value\": 20,\n  \"conditions\": {\n    \"min_order_value\": 50.00,\n    \"max_uses\": 1000\n  }\n}\n</code></pre>"},{"location":"sdks/testing/#order-data","title":"Order Data","text":"<pre><code>{\n  \"value\": 100.00,\n  \"currency\": \"USD\",\n  \"items\": [\n    {\n      \"id\": \"item_1\",\n      \"price\": 50.00,\n      \"quantity\": 2\n    }\n  ]\n}\n</code></pre>"},{"location":"sdks/testing/#test-cases","title":"Test Cases","text":""},{"location":"sdks/testing/#create-voucher","title":"Create Voucher","text":"<pre><code>// JavaScript\nconst voucher = await client.vouchers.create({\n  code: 'TEST2024',\n  type: 'percentage',\n  value: 20\n});\n\nassert(voucher.code === 'TEST2024');\nassert(voucher.type === 'percentage');\nassert(voucher.value === 20);\n</code></pre> <pre><code># Python\nvoucher = client.vouchers.create(\n    code='TEST2024',\n    type='percentage',\n    value=20\n)\n\nassert voucher.code == 'TEST2024'\nassert voucher.type == 'percentage'\nassert voucher.value == 20\n</code></pre>"},{"location":"sdks/testing/#validate-voucher","title":"Validate Voucher","text":"<pre><code>// JavaScript\nconst validation = await client.vouchers.validate({\n  code: 'TEST2024',\n  order: {\n    value: 100.00,\n    currency: 'USD'\n  }\n});\n\nassert(validation.is_valid === true);\nassert(validation.discount_amount === 20.00);\n</code></pre> <pre><code># Python\nvalidation = client.vouchers.validate(\n    code='TEST2024',\n    order={\n        'value': 100.00,\n        'currency': 'USD'\n    }\n)\n\nassert validation.is_valid is True\nassert validation.discount_amount == 20.00\n</code></pre>"},{"location":"sdks/testing/#mocking","title":"Mocking","text":""},{"location":"sdks/testing/#mock-api-responses","title":"Mock API Responses","text":"<pre><code>// JavaScript\nimport { VoucherClient } from '@voucher/api';\nimport nock from 'nock';\n\nconst client = new VoucherClient({\n  apiKey: 'test_api_key',\n  environment: 'sandbox'\n});\n\nnock('https://api.voucher.com')\n  .post('/v1/vouchers')\n  .reply(200, {\n    code: 'TEST2024',\n    type: 'percentage',\n    value: 20\n  });\n\nconst voucher = await client.vouchers.create({\n  code: 'TEST2024',\n  type: 'percentage',\n  value: 20\n});\n</code></pre> <pre><code># Python\nfrom voucher_api import VoucherClient\nfrom unittest.mock import patch\n\nclient = VoucherClient(\n    api_key='test_api_key',\n    environment='sandbox'\n)\n\nmock_response = {\n    'code': 'TEST2024',\n    'type': 'percentage',\n    'value': 20\n}\n\nwith patch('voucher_api.client.requests.post') as mock_post:\n    mock_post.return_value.json.return_value = mock_response\n    mock_post.return_value.status_code = 200\n\n    voucher = client.vouchers.create(\n        code='TEST2024',\n        type='percentage',\n        value=20\n    )\n</code></pre>"},{"location":"sdks/testing/#mock-webhooks","title":"Mock Webhooks","text":"<pre><code>// JavaScript\nimport { WebhookHandler } from '@voucher/api';\n\nconst handler = new WebhookHandler('test_webhook_secret');\nconst payload = {\n  type: 'voucher.created',\n  data: {\n    code: 'TEST2024',\n    type: 'percentage',\n    value: 20\n  }\n};\n\nconst signature = handler.sign(payload);\nconst event = handler.verify(payload, signature);\n\nassert(event.type === 'voucher.created');\nassert(event.data.code === 'TEST2024');\n</code></pre> <pre><code># Python\nfrom voucher_api import WebhookHandler\n\nhandler = WebhookHandler('test_webhook_secret')\npayload = {\n    'type': 'voucher.created',\n    'data': {\n        'code': 'TEST2024',\n        'type': 'percentage',\n        'value': 20\n    }\n}\n\nsignature = handler.sign(payload)\nevent = handler.verify(payload, signature)\n\nassert event.type == 'voucher.created'\nassert event.data.code == 'TEST2024'\n</code></pre>"},{"location":"sdks/testing/#best-practices","title":"Best Practices","text":"<ol> <li>Test Coverage</li> <li>Test all API endpoints</li> <li>Test error cases</li> <li> <p>Test edge cases</p> </li> <li> <p>Data Management</p> </li> <li>Use test data</li> <li>Clean up after tests</li> <li> <p>Use unique test data</p> </li> <li> <p>Performance</p> </li> <li>Mock external services</li> <li>Use test environment</li> <li>Monitor test duration</li> </ol>"},{"location":"sdks/testing/#next-steps","title":"Next Steps","text":"<ul> <li>Review API reference</li> <li>Check webhook events</li> <li>See rate limits</li> </ul>"},{"location":"sdks/testing/#additional-resources","title":"Additional Resources","text":"<ul> <li>API Reference</li> <li>Webhook Documentation</li> <li>Rate Limits </li> </ul>"}]}